<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wc="clr-namespace:DR.Public.FM.WindowControl">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="..\Styles\Colors.xaml" />
		<ResourceDictionary Source="..\Styles\Images.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!--Scroll bar repeat button style-->
	<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Visibility" Value="Hidden"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Scroll bar repeat button style-->
	<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Visibility" Value="Hidden"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Black" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Scroll bar thumb style-->
	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="6" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Vertical scroll bar control template-->
	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="0"/>
				<RowDefinition Height="0.00001*"/>
				<RowDefinition MaxHeight="0"/>
			</Grid.RowDefinitions>
			<Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
			<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
			<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
		</Grid>
	</ControlTemplate>

	<!--Horizontal scroll bar control template-->
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="18"/>
				<ColumnDefinition Width="0.00001*"/>
				<ColumnDefinition MaxWidth="18"/>
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
			<RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
			<Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
		</Grid>
	</ControlTemplate>

	<!--Scroll Bar Style-->
	<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="Height" Value="18" />
				<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="8"/>
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--Scroll Viewer Style-->
	<Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ScrollContentPresenter Grid.Column="1"/>
						<ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
						<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Button style-->
	<Style TargetType="{x:Type Button}">
		<Style.Resources>
			<Style TargetType="{x:Type Border}">
				<Setter Property="CornerRadius" Value="3" />
			</Style>
		</Style.Resources>
	</Style>

	<!--Close window command-->
	<wc:WindowCollapseCommand x:Key="CollapseCommand"></wc:WindowCollapseCommand>
	<wc:WindowCloseCommand x:Key="CloseCommand"></wc:WindowCloseCommand>

	<!--Window Button Style-->
	<Style x:Key="WindowButton" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Margin" Value="1.6"/>
		<Setter Property="FontFamily" Value="Raleway"/>
		<Setter Property="FontSize" Value="10px"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Height" Value="25"/>
		<Setter Property="Width" Value="25"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="#444"/>
		<Setter Property="Background" >
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
					<GradientStop Color="#fff" Offset="0.2"/>
					<GradientStop Color="#fff" Offset="0.85"/>
					<GradientStop Color="#fff" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Name="border" BorderThickness="1" Padding="0" BorderBrush="#777" CornerRadius="3" Background="{TemplateBinding Background}">
						<Grid>
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Cursor" Value="Hand"/>
							<Setter Property="Background" >
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
										<GradientStop Color="#FFFFD190" Offset="0.35"/>
										<GradientStop Color="#FFF1B13D" Offset="0.9"/>
										<GradientStop Color="#FFE89623" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" >
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
										<GradientStop Color="#FFFFD190" Offset="0.35"/>
										<GradientStop Color="#FFF1B13D" Offset="0.95"/>
										<GradientStop Color="#FFFFD190" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="content" Property="RenderTransform" >
								<Setter.Value>
									<TranslateTransform Y="1.0" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsDefaulted" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Opacity" Value="0.7" />
							<Setter Property="Foreground" Value="Gray" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Widow style -->
	<ControlTemplate x:Key="CustomWindowTemplate"   TargetType="{x:Type Window}">
		<Border BorderThickness="1.5" BorderBrush="Transparent" CornerRadius="10" Padding="2"  >
			<Border.Effect>
				<DropShadowEffect BlurRadius="20" Color="Gray" Opacity=".10" ShadowDepth="0" />
			</Border.Effect>
			<Border BorderBrush="#999" BorderThickness="1.4" CornerRadius="4" Padding="1.5" SnapsToDevicePixels="True" Background="{StaticResource WindowBackColor}">
				<Grid Background="{StaticResource WindowBackColor}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="40"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<Grid Grid.Row="0" Margin="5,0,5,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="120"/>
							</Grid.ColumnDefinitions>
							<Label Grid.Column="0" wc:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                      Padding="0" Panel.ZIndex="1">
							</Label>
							<Label Grid.Column="1" Content="{TemplateBinding Property=Title}"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                   Foreground="#444" FontSize="14" FontWeight="Normal" Margin="0,0,0,0"
                   wc:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                   wc:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CollapseCommand}" 
                   wc:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                   />

							<StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,0">

								<Button DockPanel.Dock="Right" Style="{StaticResource WindowButton}" Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
									<Image Source="{StaticResource CloseButton}" Width="19"/>
								</Button>
							</StackPanel>
						</Grid>
						<Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<Grid>
								<AdornerDecorator>
									<ContentPresenter x:Name="WindowContent"/>
								</AdornerDecorator>
							</Grid>
						</Border>
						<Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<Grid>
								<AdornerDecorator>
									<ContentPresenter x:Name="WindowContentButton"/>
								</AdornerDecorator>
							</Grid>
						</Border>
						<Grid DockPanel.Dock="Top" Grid.Row="2" Grid.Column="0" Panel.ZIndex="-999">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="4" />
								<ColumnDefinition Width="105" />
								<ColumnDefinition Width="105" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="25" />
								<RowDefinition Height="5" />
							</Grid.RowDefinitions>
						</Grid>
					</Grid>
				</Grid>
			</Border>
		</Border>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ResizeMode"  Value="CanResizeWithGrip"/>
					<Condition Property="WindowState" Value="Normal"/>
				</MultiTrigger.Conditions>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- the custom window style and the window template 
        Here you can customize the look of the window without having to touch the control template 
        or comment out the brushes and create a new style (see the red style below)-->

	<Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="FontFamily" Value="RaleWay"/>
		<Setter Property="WindowStyle" Value="None"/>
		<Setter Property="AllowsTransparency" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Background" Value="#EBEBEB"/>
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="BorderThickness" Value="0 0 0 0"/>
		<Setter Property="Foreground" Value="#E5AF42"/>
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome CaptionHeight="0" ResizeBorderThickness="7" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template" Value="{StaticResource CustomWindowTemplate}"/>
	</Style>

	<Style TargetType="{x:Type StackPanel}" x:Key="VisibleAnimation">
		<Setter Property="Visibility" Value="Collapsed"/>
		<Setter Property="Opacity" Value="0"/>
		<Style.Triggers>
			<Trigger Property="Visibility" Value="Visible">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.1" To="1.0" Duration="0:0:0.8"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>